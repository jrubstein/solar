{"version":3,"sources":["/src/application/Bootstrap.tsx","/src/application/Application.tsx","/src/components/Login/index.tsx","/src/components/Login/LoginForm.tsx","/src/application/Store.tsx"],"names":[],"mappings":"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","file":"","sourcesContent":["import 'reflect-metadata'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Navigation, Button, theme } from '@celestial'\nimport {\n  MuiThemeProvider,\n} from '@material-ui/core/styles';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Application } from './Application'\nimport { Provider } from 'react-redux'\nimport { store } from './Store'\nimport {JssProvider} from 'react-jss'\nimport { create } from 'jss';\nimport { jssPreset } from '@material-ui/core/styles';\n\nconst jss = create(jssPreset())\n\nReactDOM.render(\n    <JssProvider jss={jss}>\n        <MuiThemeProvider theme={theme}>\n            <Provider store={store}>\n                <BrowserRouter>\n                    <React.Fragment>\n                        <Navigation />\n                        <Button color=\"primary\">Button</Button>\n                        <Application />\n                    </React.Fragment>\n                </BrowserRouter>\n            </Provider>\n        </MuiThemeProvider>\n    </JssProvider>,\n    document.getElementById('main-container')\n)","import 'reflect-metadata'\nimport React from 'react'\nimport { Switch, Route, Redirect, Link } from 'react-router-dom'\nimport Loadable from 'react-loadable'\nimport { Helmet } from 'react-helmet'\n\nconst LoginComponent = Loadable({\n    loader: () => $fsmp$('../components/Login'),\n    loading: () => <div></div>\n})\n\n\nexport class Application extends React.Component {\n    render() {\n        return (\n        <React.Fragment>\n             <Helmet>\n                <title>This is mercury</title>\n            </Helmet>\n            <Switch>\n                <Route path=\"/login\" component={LoginComponent} />\n                <Redirect from=\"*\" to=\"/login\" />\n            </Switch>\n            <ul>\n                <li><Link to=\"/login\">Login</Link></li>\n            </ul>\n        </React.Fragment>\n        )\n    }\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { LoginForm } from './LoginForm';\nimport { connect } from 'react-redux';\nimport { InjectedFormProps } from 'redux-form';\nimport {Map} from 'immutable'\n\n//https://gist.github.com/iamtmrobinson/d4bb6e9297300b787891337fe9e07c42\nclass Login extends React.Component<InjectedFormProps<{}, {}>> {\n    constructor(props: InjectedFormProps<{}, {}>) {\n        super(props)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    private onSubmit(values: Map<FormData, {}>) {\n        console.log(values.toObject())\n        // https://redux-form.com/7.4.2/docs/faq/howtoclear.md/\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Helmet>\n                    <title>Login</title>\n                </Helmet>\n                {/* The typing are incorrect for / */}\n                <LoginForm onSubmit={this.onSubmit as any}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default connect(null, null)(Login)\n","import React, { InputHTMLAttributes } from \"react\";\nimport { Field, reduxForm } from \"redux-form/immutable\";\nimport { WrappedFieldProps, InjectedFormProps } from \"redux-form\";\nimport {Map} from 'immutable'\nimport injectSheet from 'react-jss'\nimport { WithStyles, StyleRules } from \"@material-ui/core/styles\";\n\nexport const LoginFormName: string = 'LoginForm'\n\n\nconst styles: StyleRules = {\n    button: {\n        color: 'orange'\n    },\n    form: {\n        '& button': {\n            color: 'red',\n        }\n    }\n}\n\ntype TextInputProps = {\n    // label: string,\n    className?: string\n} & WrappedFieldProps\n\ntype LoginFields = {\n    firstName?: string,\n    email?: string,\n    lastName?: string\n}\n\nconst validate = (data: Map<LoginFields, {}>) => {\n    const values: LoginFields = data.toObject()\n    const errors: LoginFields = {}\n    if (!values.firstName) {\n      errors.firstName = 'Required'\n    } else if (values.firstName.length > 15) {\n      errors.firstName = 'Must be 15 characters or less'\n    }\n\n    if (!values.email) {\n      errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address'\n    }\n    if (!values.lastName) {\n      errors.lastName = 'Required'\n    }\n\n    return errors\n  }\n\n  const renderField = ({\n    input,\n    type,\n    placeholder,\n    meta: { touched, error, warning, }\n  }: TextInputProps & InputHTMLAttributes<{label: string}>) => (\n    <div>\n      <div>\n        <input {...input} placeholder={placeholder} type={type} />\n        {touched &&\n          ((error && <span>{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\nconst form = (props: InjectedFormProps<{}, {}> & WithStyles) => {\n    const { handleSubmit, reset,pristine , submitting } = props\n    console.log(pristine, submitting)\n    return (\n        <form onSubmit={handleSubmit} className={props.classes.form}>\n            <div>\n                <label htmlFor=\"firstName\">First Name</label>\n                <Field name=\"firstName\" component={renderField} type=\"text\" placeholder=\"Place holder\" />\n            </div>\n            <div>\n                <label htmlFor=\"lastName\">Last Name</label>\n                <Field name=\"lastName\" component={renderField} type=\"text\" />\n            </div>\n            <div>\n                <label htmlFor=\"email\">Email</label>\n                <Field name=\"email\" component={renderField} type=\"email\" />\n            </div>\n            <button type=\"submit\" disabled={submitting}>Submit</button>\n            <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Reset</button>\n        </form>\n    )\n}\n\nexport const LoginForm = reduxForm<{}, {}>({\n    form: LoginFormName,\n    validate\n  })(injectSheet(styles)(form))","import { createStore, applyMiddleware, compose, combineReducers } from \"redux\"\nimport freeze from 'redux-freeze'\nimport { reducer as form } from 'redux-form/immutable'\n\n// add the middlewares\nlet middlewares = [];\nconst windowIfDefined = typeof window === 'undefined' ? null : window as any;\nconst composeEnhancers = windowIfDefined.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// add the freeze dev middleware\nif (process.env.NODE_ENV !== 'production') {\n  middlewares.push(freeze);\n}\n\n// apply the middleware\nlet middleware = applyMiddleware(...middlewares);\n\n\nconst reducer = (store = {}) => {\n    return store\n}\n\nconst rootStore = combineReducers({\n    data: reducer,\n    form\n})\n\n// create the store\nconst store = createStore(rootStore, composeEnhancers(\n    middleware\n));\n\n// export\nexport { store, rootStore };"]}